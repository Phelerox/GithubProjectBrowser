ext {
    //Android
    androidBuildToolsVersion = "28.0.0"
    androidMinSdkVersion = 16
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28
    supportLibraryVersion = '28.0.0'


    //Layer Dependencies
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    rxKotlinVersion = '2.2.0'

    gsonVersion = '2.8.5'
    retrofitVersion = '2.4.0'
    okHttpVersion = '3.9.1'

    daggerVersion = '2.19'
    kotlinVersion = '1.3.21'
    roomVersion = '1.1.1'

    androidAnnotationsVersion = '26.0.0'
    rxAndroidVersion = '2.1.1'

    glideVersion = '4.9.0'
    glassfishAnnotationVersion = '3.1.1'
    espressoVersion = '3.0.2'
    runnerVersion = '0.5'
    constraintLayoutVersion = '1.1.3'
    lottieVersion = '2.7.0'
    pushDownAnimVersion = '1.1.1'
    rxNetworkVersion = '3.0.1'

    //Test Dependencies
    jUnitVersion = '4.12'
    mockitoVersion = '2.22.0'
    kotlinJUnitVersion = '1.3.21'

    archCompVersion = '1.1.1'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    androidSupportRulesVersion = '28.0.0'
    robolectricVersion = '3.4.2'

    mockitoKotlinVersion = '1.5.0'
    mockitoAndroidVersion = '2.8.9'

    // -------------------------------- Domain --------------------------------
    domainDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava         : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"
    ]

    // -------------------------------- Domain Test --------------------------------
    domainTestDependencies = [
            junit  : "junit:junit:${jUnitVersion}",
            mockito: "org.mockito:mockito-inline:${mockitoVersion}",
    ]
    //-------------------------------------------------------------
    //-------------------------------------------------------------
    //-------------------------------------------------------------


    // -------------------------------- Data --------------------------------
    dataDependencies = [
            rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
    ]

    // -------------------------------- Data Test --------------------------------
    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinJUnitVersion}",
            mockito    : "org.mockito:mockito-inline:${mockitoVersion}",
    ]
    //-------------------------------------------------------------
    //-------------------------------------------------------------
    //-------------------------------------------------------------


    // -------------------------------- Remote --------------------------------
    remoteDependencies = [
            rxKotlin         : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            javaxAnnotation  : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject      : "javax.inject:javax.inject:${javaxInjectVersion}",
            gson             : "com.google.code.gson:gson:${gsonVersion}",
            okHttp           : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit         : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    // -------------------------------- Remote Test --------------------------------
    remoteTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinJUnitVersion}",
            mockito    : "org.mockito:mockito-inline:${mockitoVersion}",
    ]

    //-------------------------------------------------------------
    //-------------------------------------------------------------
    //-------------------------------------------------------------


    // -------------------------------- Cache --------------------------------
    cacheDependencies = [
            rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            roomRuntime    : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler   : "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava     : "android.arch.persistence.room:rxjava2:${roomVersion}"
    ]

    // -------------------------------- Cache Test --------------------------------
    cacheTestDependencies = [
            junit             : "junit:junit:${jUnitVersion}",
            kotlinJUnit       : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinJUnitVersion}",
            mockito           : "org.mockito:mockito-inline:${mockitoVersion}",
            roomTesting       : "android.arch.persistence.room:testing:${roomVersion}",
            archTesting       : "android.arch.core:core-testing:${archCompVersion}",
            supportRunner     : "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules      : "com.android.support.test:rules:${androidSupportRulesVersion}",
            supportAnnotations: "com.android.support:support-annotations:${androidSupportRulesVersion}",
            robolectric       : "org.robolectric:robolectric:${robolectricVersion}"
    ]

    //-------------------------------------------------------------
    //-------------------------------------------------------------
    //-------------------------------------------------------------


    // -------------------------------- Presentation --------------------------------
    presentationDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            archRuntime       : "android.arch.lifecycle:runtime:${archCompVersion}",
            archExtensions    : "android.arch.lifecycle:extensions:${archCompVersion}",
            archCompiler      : "android.arch.lifecycle:compiler:${archCompVersion}",
    ]

    // -------------------------------- Presentation Test --------------------------------
    presentationTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinJUnitVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            archTesting: "android.arch.core:core-testing:${archCompVersion}",
    ]
    //-------------------------------------------------------------
    //-------------------------------------------------------------
    //-------------------------------------------------------------


    // -------------------------------- Mobile --------------------------------
    mobileDependencies = [
            daggerCompiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger             : "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin           : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide              : "com.github.bumptech.glide:glide:${glideVersion}",
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation    : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject        : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations : "com.android.support:support-annotations:${supportLibraryVersion}",
            supportDesign      : "com.android.support:design:${supportLibraryVersion}",
            supportRecyclerView: "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            daggerSupport      : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRxJava         : "android.arch.persistence.room:rxjava2:${roomVersion}",
            constraintLayout   : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            lottie             : "com.airbnb.android:lottie:${lottieVersion}",
            pushDownAnim       : "com.github.thekhaeng:pushdown-anim-click:${pushDownAnimVersion}",
            reactivenetwork    : "com.github.pwittchen:reactivenetwork-rx2:${rxNetworkVersion}"

    ]


    // -------------------------------- Mobile Test --------------------------------

    mobileUiTestDependencies = [
            junit          : "junit:junit:${jUnitVersion}",
            kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            supportRunner  : "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules   : "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid : "org.mockito:mockito-android:${mockitoAndroidVersion}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner  : "com.android.support.test:runner:${runnerVersion}",
            androidRules   : "com.android.support.test:rules:${runnerVersion}"
    ]


}